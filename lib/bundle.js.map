{"version":3,"sources":["webpack:///webpack/bootstrap a371350e8c175d7b601e","webpack:///./lib/tictactoe.js","webpack:///./lib/view.js","webpack:///./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,EAAC;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a371350e8c175d7b601e","const View = require('./view.js');\nconst Game = require('./game.js');\n\n$( () => {\n  const board = $(\".ttt-board\");\n\n  const game = new Game();\n\n  new View(game, board);\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tictactoe.js\n// module id = 0\n// module chunks = 0","class View {\n  constructor(game, $el) {\n    this.game = game;\n    this.$el = $el;\n    this.setupBoard();\n    this.handleClick();\n    this.handleResetButton();\n  }\n\n  setupBoard($el) {\n    for (var listItems = 0; listItems < 9; listItems++) {\n      this.$el.append(\"<li class='board-tile' value='\" + listItems + \"'></li>\");\n    }\n  }\n\n  handleClick() {\n    this.$el.on(\"click\", \"li\", ( (e) => {\n      const $li = $( e.currentTarget );\n      this.game.takeTurn($li);\n      if (this.game.isGameOver()) {\n        alert(this.game.currentPlayer + \" is the winner!\");\n\n        this.resetGame();\n      } else {\n        this.game.changePlayers();\n      }\n    }))\n  }\n\n  handleResetButton() {\n    const resetButton = $(\".reset-button\");\n\n    resetButton.on(\"click\", () => {\n      this.resetGame();\n    })\n  }\n\n  resetGame(){\n    const tiles = $(\".board-tile\");\n    tiles.remove();\n\n    this.game.resetGameBoard();\n    this.setupBoard(this.$el);\n  }\n\n}\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/view.js\n// module id = 1\n// module chunks = 0","class Game {\n  constructor(){\n    this.marks = [\"X\", \"O\"];\n    this.currentPlayer = this.marks[0];\n    this.gameOver = false;\n    this.gameBoard = this.makeGameBoard();\n  }\n\n  makeGameBoard() {\n    const grid = []\n\n    for (var i = 0; i < 3; i++) {\n      grid.push([]);\n      for (var n = 0; n < 3; n++) {\n        grid[i].push(null);\n      }\n    }\n    return grid;\n  }\n\n  isValidMove(colValue, rowValue) {\n    if (this.gameBoard[colValue][rowValue] !== null) {\n      return false;\n    }\n    return true;\n  }\n\n  takeTurn($li) {\n\n    const value = $li.val();\n\n    //calculates internal game board column\n    const colValue = Math.floor(value / 3);\n\n    //calculates internal game board row\n    const rowValue = value % 3;\n\n    if (this.isValidMove(colValue, rowValue)) {\n\n      this.gameBoard[colValue][rowValue] = this.currentPlayer;\n      $li.append(\"<div class='tile-text'>\" + this.currentPlayer + \"</div>\");\n\n      if (this.currentPlayer === this.marks[0]) {\n        $li.css(\"background-color\", \"yellow\");\n      } else {\n        $li.css(\"background-color\", \"cyan\");\n      }\n\n    } else {\n      alert(\"Invalid move! Try another position\")\n    }\n  }\n\n  changePlayers() {\n    if (this.currentPlayer === this.marks[0]) {\n      this.currentPlayer = this.marks[1];\n    } else {\n      this.currentPlayer = this.marks[0];\n    }\n  }\n\n  isGameOver() {\n    if (this.checkRowWin() || this.checkColWin() || this.checkDiagWin()) {\n      return true;\n    }\n    return false;\n  }\n\n  // checks all rows for a win\n  checkRowWin(){\n    for (var i = 0; i < 3; i++) {\n      let isWin = true;\n      for (var j = 0; j < 3; j++) {\n        if (this.gameBoard[i][j] !== this.currentPlayer || this.gameBoard[i][j] === null) {\n          isWin = false;\n        }\n      }\n      if (isWin) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //checks all columns for a win\n  checkColWin() {\n    for (var i = 0; i < 3; i++) {\n      let isWin = true;\n      for (var j = 0; j < 3; j++) {\n        if (this.gameBoard[j][i] !== this.currentPlayer || this.gameBoard[j][i] === null ) {\n          isWin = false;\n        }\n      }\n      if (isWin) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkDiagWin() {\n    let isWin = true;\n\n    //checks [0,0], [1,1], and [2,2] for a win\n    for (var i = 0; i < 3; i++) {\n      if (this.gameBoard[i][i] !== this.currentPlayer || this.gameBoard[i][i] === null ) {\n        isWin = false;\n      }\n    }\n    if (isWin === true) {\n      return true;\n    }\n\n    isWin = true;\n\n    //checks [2,0], [1,1], and [0,2] for a win\n    let j = 0;\n    for (var i = 2; i >= 0; i--) {\n      console.log(this.gameBoard[i][j]);\n      if (this.gameBoard[i][j] !== this.currentPlayer || this.gameBoard[i][j] === null ) {\n        isWin = false;\n      }\n      j++;\n    }\n\n    return isWin;\n  }\n\n  resetGameBoard() {\n    this.gameBoard = this.makeGameBoard();\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}